-- Gridview
<asp:GridView ID="gvMeetings" runat="server" CssClass="table table-bordered" UseAccessibleHeader="true"
    AutoGenerateColumns="False" OnRowCommand="gvMeetings_RowCommand" DataKeyNames="MeetingId" OnRowCreated="gvMeetings_RowCreated" OnRowDataBound="gvMeetings_RowDataBound">
    <Columns>
        <asp:TemplateField HeaderText="#" HeaderStyle-HorizontalAlign="Center">
            <ItemTemplate>
                <%# Container.DataItemIndex + 1 %>
            </ItemTemplate>
        </asp:TemplateField>
        <asp:BoundField DataField="MeetingId" HeaderText="Meeting ID" />
        <asp:BoundField DataField="Title" HeaderText="Title" />
        <asp:BoundField DataField="StartDateTime" HeaderText="Start Date" DataFormatString="{0:MM/dd/yyyy hh:mm tt}" />
        <asp:BoundField DataField="EndDateTime" HeaderText="End Date" DataFormatString="{0:MM/dd/yyyy hh:mm tt}" />
        <asp:BoundField DataField="Venue" HeaderText="Venue" />
        <asp:TemplateField HeaderText="Status">
            <ItemTemplate>
                <asp:Label ID="lblStatus" runat="server" Text='<%# Eval("Status1") %>' CssClass="badge"></asp:Label>
            </ItemTemplate>
        </asp:TemplateField>


        <asp:TemplateField>
            <HeaderTemplate>
                <i class="bi bi-gear-fill"></i> Actions
            </HeaderTemplate>
            <ItemTemplate>

                <asp:LinkButton ID="btnStartMeeting" runat="server"
                    CommandName="StartMeeting"
                    CommandArgument='<%# Eval("MeetingId") %>'
                    CssClass="btn btn-sm text-primary me-1"
                    ToolTip="Start Meeting">
                    <i class="far fa-eye"></i>
                </asp:LinkButton>

                <asp:LinkButton ID="EditButton" runat="server"
                    CommandName="EditMeeting" CommandArgument='<%# Eval("MeetingId") %>'
                    CssClass="btn btn-sm text-warning me-1" ToolTip="Edit">
                    <i class="fas fa-pencil-alt"></i>
                </asp:LinkButton>

                <asp:LinkButton runat="server" CommandName="DeleteMeeting" CommandArgument='<%# Eval("MeetingId") %>' CssClass="btn btn-sm text-danger me-1" OnClientClick="return confirm('Are you sure you want to delete this meeting?');" ToolTip="Delete Meeting">
                        <i class="fas fa-trash fs-6"></i>
                </asp:LinkButton>

            </ItemTemplate>
        </asp:TemplateField>
    </Columns>
</asp:GridView>

-- Code behind
protected void gvMeetings_RowCommand(object sender, GridViewCommandEventArgs e)
{
    string meetingId = e.CommandArgument.ToString();

    if (e.CommandName == "StartMeeting")
    {
        string connectionString = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

        // Check status first
        string status = "";
        using (SqlConnection conn = new SqlConnection(connectionString))
        using (SqlCommand cmd = new SqlCommand("SELECT Status1 FROM Tbl_Meetings WHERE MeetingID = @MeetingID", conn))
        {
            cmd.Parameters.AddWithValue("@MeetingID", meetingId);
            conn.Open();
            status = cmd.ExecuteScalar()?.ToString();
        }

        if (status == "Scheduled")
        {
            // Update to Ongoing
            using (SqlConnection conn = new SqlConnection(connectionString))
            using (SqlCommand cmd = new SqlCommand("MA_UpdateMeetingStatus", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingID", meetingId);
                cmd.Parameters.AddWithValue("@Status", "Ongoing");

                conn.Open();
                cmd.ExecuteNonQuery();
            }
        }

        // Redirect to attendance page either way
        Response.Redirect($"meetingattendance.aspx?meetingId={meetingId}");
    }

    else if (e.CommandName == "EditMeeting")
    {
        Response.Redirect($"EditMeeting.aspx?meetingId={meetingId}");
    }

    else if (e.CommandName == "DeleteMeeting")
    {
        DeleteMeeting(meetingId);
        LoadMeetings();
    }
}
