<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="meetinglist1.aspx.cs" Inherits="WebApplication1_MAL.meetinglist1" %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Meeting Attendance Tapping</title>

    <!-- Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito">

    <!-- Custom styles -->
    <link href="css/styles.css" rel="stylesheet" />
    <!-- ??? -->
    <link href="Scripts2/styles.css" rel="stylesheet" />

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />


    <script type="text/javascript">
        function proceed() {
            return confirm('Are you sure you want to Approve this Report?');
        }
    </script>

    <%--<script src="js/jquery-3.2.0.min.js"></script>
        <script src="js/all.min.js"></script>--%>

    <!-- Existing JS -->
    <script src="Scripts2/jquery-3.2.0.min.js"></script>
    <script src="Scripts2/all.min.js"></script>
</head>

<body class="sb-nav-fixed">
    <form id="form1" runat="server">
    <%--<form id="formCreateMeeting" runat="server" class="needs-validation" novalidate>--%>
        <!-- Top Navbar -->
        <nav class="navbar navbar-expand" style="background-color: #10218B;" data-bs-theme="dark">
            <div class="container-fluid">
                <a class="navbar-brand ps-3" href="Home1.aspx" style="font-weight: bold; font-family: nunito; font-size: 17px;">Meeting Attendance Tapping</a>
                <!-- Sidebar Toggle-->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item"><a class="nav-link" href="Home1.aspx">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link active" href="#">Meetings</a></li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="MeetingsList.aspx" role="button" data-bs-toggle="dropdown" aria-expanded="false">System Maintenance
                            </a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#">Manage Roles</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
                <!-- User Dropdown -->
                <ul class="navbar-nav ms-auto me-3">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-user fa-fw"></i></a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="#">Logout</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>



        <main>
            <div class="container-fluid px-4">
                <h1 class="mt-3">Meetings</h1>
                <ol class="breadcrumb mb-4 mt-3">
                    <li class="breadcrumb-item"><a href="Home1.aspx">Dashboard</a></li>
                    <li class="breadcrumb-item active">Meetings</li>
                </ol>


                <asp:Panel ID="pnlSuccess" runat="server" CssClass="alert alert-success d-flex align-items-center alert-dismissible fade show" Visible="false">
                    <i class="fa fa-check-circle me-2"></i>
                    <div>Saved successfully.</div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </asp:Panel>



                <asp:LinkButton ID="btnAddNew" runat="server" CssClass="btn btn-primary mb-3"
                    OnClientClick="resetForm(); showModal(); return false;">
                    <i class="fa fa-plus"></i> Create New Meeting
                </asp:LinkButton>



                <div class="row g-4">
                    <div class="container mt-4">
                        <div class="card">
                            <div class="card-header d-flex align-items-center">
                                <i class="bi bi-list me-2" style="font-size: 1.5rem; cursor: pointer;"></i>
                                <span>Meetings List</span>
                            </div>
                            <div class="card-body">
                                <!-- Table -->
                                <asp:GridView ID="gvMeetings" runat="server" CssClass="table table-bordered" UseAccessibleHeader="true"
                                    AutoGenerateColumns="False" OnRowCommand="gvMeetings_RowCommand" DataKeyNames="MeetingId" OnRowCreated="gvMeetings_RowCreated" OnRowDataBound="gvMeetings_RowDataBound">
                                    <Columns>
                                        <asp:TemplateField HeaderText="#" HeaderStyle-HorizontalAlign="Center">
                                            <ItemTemplate>
                                                <%# Container.DataItemIndex + 1 %>
                                            </ItemTemplate>
                                        </asp:TemplateField>
                                        <asp:BoundField DataField="MeetingId" HeaderText="Meeting ID" />
                                        <asp:BoundField DataField="Title" HeaderText="Title" />
                                        <asp:BoundField DataField="StartDateTime" HeaderText="Start Date" DataFormatString="{0:MM-dd-yyyy hh:mm tt}" />
                                        <asp:BoundField DataField="EndDateTime" HeaderText="End Date" DataFormatString="{0:MM-dd-yyyy hh:mm tt}" />
                                        <asp:BoundField DataField="Venue" HeaderText="Venue" />
                                        <%--<asp:BoundField DataField="Status" HeaderText="Status" />--%>
                                        <asp:TemplateField HeaderText="Status">
                                            <ItemTemplate>
                                                <asp:Label ID="lblStatus" runat="server" Text='<%# Eval("Status1") %>' CssClass="badge"></asp:Label>
                                            </ItemTemplate>
                                        </asp:TemplateField>

                                        <%--<asp:TemplateField HeaderText="Actions">--%>

                                        <asp:TemplateField>
                                            <HeaderTemplate>
                                                <i class="bi bi-gear-fill"> </i>Actions
                                            </HeaderTemplate>
                                            <ItemTemplate>
                                                <asp:LinkButton runat="server" CommandName="StartMeeting" CommandArgument='<%# Eval("MeetingId") %>' CssClass="btn btn-sm text-primary me-1" ToolTip="View Meeting">
                                                        <i class="far fa-eye"></i>
                                                </asp:LinkButton>
                                                <button class="btn btn-sm btn-info" 
                                                        onclick="openStartModal('<%# Eval("MeetingID") %>')">
                                                    <i class="fas fa-play"></i>
                                                </button>

                                                <asp:LinkButton runat="server" CommandName="EditMeeting" CommandArgument='<%# Eval("MeetingId") %>' CssClass="btn btn-sm text-warning me-1" ToolTip="Edit">
                                                        <i class="fas fa-pencil-alt"></i>
                                                </asp:LinkButton>
                                                <button type="button" class="btn btn-sm btn-primary editMeetingBtn"
                                                    data-meetingid='<%# Eval("MeetingId") %>'
                                                    data-bs-toggle="modal" data-bs-target="#editMeetingModal">
                                                    <i class="fas fa-pencil-alt"></i>
                                                </button>
                                                <asp:LinkButton runat="server" CommandName="DeleteMeeting" CommandArgument='<%# Eval("MeetingId") %>' CssClass="btn btn-sm text-danger me-1" OnClientClick="return confirm('Are you sure you want to delete this meeting?');" ToolTip="Delete Meeting">
                                                        <i class="fas fa-trash"></i>
                                                </asp:LinkButton>

                                                <button class="btn btn-sm btn-danger" 
                                                        onclick="openDeleteModal('<%# Eval("MeetingID") %>')">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            </ItemTemplate>
                                        </asp:TemplateField>
                                    </Columns>
                                </asp:GridView>
                                <asp:Label ID="lblMessage" runat="server" CssClass="text-danger fw-bold"></asp:Label>
                                <!-- End Table -->
                            </div>
                        </div>
                    </div>
                </div>               

                <!-- Modal -->
                <div class="modal fade" id="addNewModal" tabindex="-1" aria-labelledby="addNewModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addNewModalLabel"><i class="far fa-calendar-plus me-2"></i>Add New Meeting</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>

                            <!-- Wrap modal body in a form for Bootstrap validation -->
                            <%--<form id="formCreateMeeting" runat="server" class="needs-validation" novalidate>--%>
                                <div class="modal-body">
                    
                                    <!-- Title -->
                                    <div class="mb-3">
                                        <label class="form-label">Title <span class="text-danger">*</span></label>
                                        <asp:TextBox ID="txtTitle" runat="server" CssClass="form-control" />
                                        <div class="invalid-feedback">Title is required.</div>
                                        <asp:RequiredFieldValidator ID="rfvTitle" runat="server" ControlToValidate="txtTitle"
                                            ErrorMessage="Title is required." CssClass="text-danger" Display="Dynamic"
                                            ValidationGroup="CreateMeeting" />
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                    <!-- Start Date -->
                                    <%--<div class="mb-3">--%>
                                        <label class="form-label">Start Date <span class="text-danger">*</span></label>
                                        <asp:TextBox ID="txtStartDateTime" runat="server" CssClass="form-control" TextMode="DateTimeLocal" />
                                        <div class="invalid-feedback">Start date is required.</div>
                                        <asp:RequiredFieldValidator ID="rfvStartDate" runat="server" ControlToValidate="txtStartDateTime"
                                            ErrorMessage="Start date is required." CssClass="text-danger" Display="Dynamic"
                                            ValidationGroup="CreateMeeting" />
                                        </div>

                                        <div class="col-md-6 mb-3">
                                        <!-- End Date -->
                                        <%--<div class="mb-3">--%>
                                        <label class="form-label">End Date <span class="text-danger">*</span></label>
                                        <asp:TextBox ID="txtEndDateTime" runat="server" CssClass="form-control" TextMode="DateTimeLocal" />
                                        <div class="invalid-feedback">End date is required.</div>
                                        <asp:RequiredFieldValidator ID="rfvEndDate" runat="server" ControlToValidate="txtEndDateTime"
                                            ErrorMessage="End date is required." CssClass="text-danger" Display="Dynamic"
                                            ValidationGroup="CreateMeeting" />
                                        </div>
                                    </div>

                                    <!-- Venue -->
                                    <div class="mb-3">
                                        <label class="form-label">Location <span class="text-danger">*</span></label>
                                        <asp:TextBox ID="txtVenue" runat="server" CssClass="form-control" />
                                        <div class="invalid-feedback">Location is required.</div>
                                        <asp:RequiredFieldValidator ID="rfvVenue" runat="server" ControlToValidate="txtVenue"
                                            ErrorMessage="Location is required." CssClass="text-danger" Display="Dynamic"
                                            ValidationGroup="CreateMeeting" />
                                    </div>

                                    <!-- Organizer -->
                                    <div class="mb-3">
                                        <label class="form-label">Organizer <span class="text-danger">*</span></label>
                                        <asp:TextBox ID="txtOrganizer" runat="server" CssClass="form-control" />
                                        <div class="invalid-feedback">Organizer is required.</div>
                                        <asp:RequiredFieldValidator ID="rfvOrganizer" runat="server" ControlToValidate="txtOrganizer"
                                            ErrorMessage="Organizer is required." CssClass="text-danger" Display="Dynamic"
                                            ValidationGroup="CreateMeeting" />
                                    </div>

                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                        <i class="fas fa-times"></i> Cancel
                                    </button>
                                    <asp:Button ID="btnSave" runat="server" CssClass="btn btn-primary"
                                        Text="Save" OnClick="btnSave_Click" ValidationGroup="CreateMeeting" />
                                </div>
                            <%--</form>--%>
                        </div>
                    </div>
                </div>
                <!-- End Save Modal -->

                <!-- Edit Modal -->
                <div class="modal fade" id="editMeetingModal" tabindex="-1" aria-labelledby="editMeetingModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title"><i class="fas fa-edit me-2"></i>Edit Meeting</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                           <%--<form id="formEditMeeting" runat="server" class="needs-validation" novalidate>--%>
                                <div class="modal-body">
                                    <asp:HiddenField ID="hfEditMeetingId" runat="server" />

                                    <div class="mb-3">
                                        <label class="form-label">Title</label>
                                        <asp:TextBox ID="txtEditTitle" runat="server" CssClass="form-control" />
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">Start Date</label>
                                            <asp:TextBox ID="txtEditStartDate" runat="server" CssClass="form-control" TextMode="DateTimeLocal" />
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">End Date</label>
                                            <asp:TextBox ID="txtEditEndDate" runat="server" CssClass="form-control" TextMode="DateTimeLocal" />
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Venue</label>
                                        <asp:TextBox ID="txtEditVenue" runat="server" CssClass="form-control" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Organizer</label>
                                        <asp:TextBox ID="txtEditOrganizer" runat="server" CssClass="form-control" />
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                        <i class="fas fa-times"></i> Cancel
                                    </button>
                                    <asp:Button ID="btnUpdate" runat="server" CssClass="btn btn-success"
                                        Text="Update" OnClick="btnUpdate_Click" />
                                </div>
                            <%--</form>--%>
                        </div>
                    </div>
                </div>

                <!-- Delete Confirmation Modal -->
                <div class="modal fade" id="deleteMeetingModal" tabindex="-1" aria-labelledby="deleteMeetingModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header bg-danger text-white">
                                <h5 class="modal-title"><i class="fas fa-trash-alt me-2"></i>Confirm Delete</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <asp:HiddenField ID="hfDeleteMeetingId" runat="server" />
                                <p>Are you sure you want to delete this meeting?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                    <i class="fas fa-times"></i> Cancel
                                </button>
                                <asp:Button ID="btnConfirmDelete" runat="server" CssClass="btn btn-danger"
                                    Text="Yes, Delete" OnClick="btnConfirmDelete_Click" />
                            </div>
                        </div>
                    </div>
                </div>



                <!-- Start Meeting Modal -->
                <div class="modal fade" id="startMeetingModal" tabindex="-1" aria-labelledby="startMeetingModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header bg-primary text-white">
                                <h5 class="modal-title"><i class="fas fa-play-circle me-2"></i>Start Meeting</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <asp:HiddenField ID="hfStartMeetingId" runat="server" />
                                <p>Are you sure you want to start this meeting?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                    <i class="fas fa-times"></i> Cancel
                                </button>
                                <asp:Button ID="btnConfirmStart" runat="server" CssClass="btn btn-primary"
                                    Text="Yes, Start" OnClick="btnConfirmStart_Click" />
                            </div>
                        </div>
                    </div>
                </div>





            </div>
        </main>
    </form>

    <!-- Scripts already in your footer -->
    <script src="Scripts2/bootstrap.bundle.min.js"></script>
    <script src="Scripts2/scripts.js"></script>
    <script src="Scripts2/simple-datatables.js"></script>
    <script src="Scripts2/datatables-simple-demo.js"></script>
    <!-- Bootstrap JS -->

    <!-- Apply DataTable -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const table = document.querySelector("#<%= gvMeetings.ClientID %>");
                if (table) {
                    new simpleDatatables.DataTable(table);
                }
            });
    </script>

    <!-- Bootstrap JS -->

    <script>
        function showModal() {
            var modal = new bootstrap.Modal(document.getElementById('addNewModal'));
            modal.show();
        }

        function resetForm() {
            document.getElementById('<%= txtTitle.ClientID %>').value = '';
                document.getElementById('<%= txtStartDateTime.ClientID %>').value = '';

                document.getElementById('<%= txtEndDateTime.ClientID %>').value = '';

                document.getElementById('<%= txtVenue.ClientID %>').value = '';
                document.getElementById('<%= txtOrganizer.ClientID %>').value = '';
        }

        function closeModal() {
            var modalEl = document.getElementById('addNewModal');
            var modal = bootstrap.Modal.getInstance(modalEl);
            modal.hide();
        }

        function showSuccessAlert() {
            var alertBox = document.getElementById('<%= pnlSuccess.ClientID %>');
            if (alertBox) {
                alertBox.style.display = 'block';
                setTimeout(function () {
                    var bsAlert = new bootstrap.Alert(alertBox);
                    bsAlert.close();
                }, 3000); // auto-hide after 3 seconds
            }
        }
    </script>

    <!--09/04/25 Bootstrap Validation-->
    <%--<script>
        document.addEventListener("DOMContentLoaded", function () {
            var forms = document.querySelectorAll(".needs-validation");
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener("submit", function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add("was-validated");
                }, false);
            });
        });
    </script>--%>

    <!--09/04/25 Date Validation-->
    <script>
        function validateDateRange(sender, args) {
            var startDate = document.getElementById("<%= txtStartDateTime.ClientID %>").value;
    var endDate = document.getElementById("<%= txtEndDateTime.ClientID %>").value;

            if (startDate && endDate) {
                var start = new Date(startDate);
                var end = new Date(endDate);
                args.IsValid = (end > start);
            } else {
                args.IsValid = true; // let required validators handle empty fields
            }
        }
    </script>

    <script>
            document.addEventListener("DOMContentLoaded", function () {
                document.querySelectorAll(".editMeetingBtn").forEach(function (btn) {
                    btn.addEventListener("click", function () {
                        var meetingId = this.getAttribute("data-meetingid");

                        // AJAX call to fetch meeting details from server
                        $.ajax({
                            type: "POST",
                            url: "meetinglist1.aspx/GetMeetingById",
                            data: JSON.stringify({ meetingId: meetingId }),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                var m = response.d;
                                $("#<%= hfEditMeetingId.ClientID %>").val(m.MeetingId);
                        $("#<%= txtEditTitle.ClientID %>").val(m.Title);
                        $("#<%= txtEditStartDate.ClientID %>").val(m.StartDateTime);
                        $("#<%= txtEditEndDate.ClientID %>").val(m.EndDateTime);
                        $("#<%= txtEditVenue.ClientID %>").val(m.Venue);
                        $("#<%= txtEditOrganizer.ClientID %>").val(m.Organizer);
                    }
                });
            });
        });
    });
    </script>

    <script>
        $('#gvMeetings').DataTable({
            "createdRow": function (row, data, dataIndex) {
                // Assuming StartDate is column index 2 and Status is column index 4
                var startDate = new Date(data[4]);
                var status = data[7];
                var now = new Date();

                if (status === "Scheduled") {
                    if (startDate < now) {
                        // Meeting time passed but still scheduled → missed
                        $('td', row).eq(2).addClass('text-white bg-danger');
                    } else if (startDate.toDateString() === now.toDateString() &&
                        startDate <= now) {
                        // Meeting started today but still scheduled → late
                        $('td', row).eq(2).addClass('text-dark bg-warning');
                    }
                }
            }
        });

    </script>

    <%--Delete Modal Function--%>
    <script>
        function openDeleteModal(meetingId) {
            document.getElementById('<%= hfDeleteMeetingId.ClientID %>').value = meetingId;
            var myModal = new bootstrap.Modal(document.getElementById('deleteMeetingModal'));
            myModal.show();
        }
    </script>

    <script>
        function openStartModal(meetingId) {
            document.getElementById('<%= hfStartMeetingId.ClientID %>').value = meetingId;
            var myModal = new bootstrap.Modal(document.getElementById('startMeetingModal'));
            myModal.show();
        }
    </script>


</body>
</html>


-- Code Behind

using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication1_MAL
{
    public partial class meetinglist1 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                LoadMeetings();
            }
        }

        private void LoadMeetings()
        {
            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
            string currentUser = "B014172"; //Session["Username"].ToString(); //"B014172"; //Session["B014172"].ToString(); //User.Identity.Name; // or Session["Username"].ToString();

            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("MA_GetUserMeetings", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@CreatedBy", currentUser);

                using (SqlDataAdapter da = new SqlDataAdapter(cmd))
                {
                    DataTable dt = new DataTable();
                    da.Fill(dt);

                    if (dt.Rows.Count > 0)
                    {
                        gvMeetings.DataSource = dt;
                        gvMeetings.DataBind();
                    }
                    else
                    {
                        lblMessage.Text = "No upcoming meetings found.";
                        gvMeetings.DataSource = null;
                        gvMeetings.DataBind();
                    }
                }
            }
        }
        protected void gvMeetings_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            string meetingId = e.CommandArgument.ToString();


            if (e.CommandName == "StartMeeting")
            {
                string connectionString = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
                //string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

                using (SqlConnection conn = new SqlConnection(connectionString))
                {
                    using (SqlCommand cmd = new SqlCommand("UpdateMeetingStatus", conn))
                    {
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.AddWithValue("@MeetingID", meetingId);

                        conn.Open();
                        cmd.ExecuteNonQuery();
                    }
                }

                // Redirect to Tapping Page (e.g., Attendance logging)
                Response.Redirect($"meetingattendance.aspx?meetingId={meetingId}");
            }

            else if (e.CommandName == "EditMeeting")
            {
                // Redirect to Edit page (you must create this)
                Response.Redirect($"EditMeeting.aspx?meetingId={meetingId}");
            }
            else if (e.CommandName == "DeleteMeeting")
            {
                DeleteMeeting(meetingId);
                LoadMeetings(); // refresh grid

            }
        }

        protected void gvMeetings_RowCreated(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.Header)
            {
                e.Row.TableSection = TableRowSection.TableHeader;
            }
        }


        private void DeleteMeeting(string meetingId)
        {
            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("DeleteMeeting", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingId", meetingId);

                conn.Open();
                cmd.ExecuteNonQuery();
            }
        }

        protected void btnSave_Click(object sender, EventArgs e)
        {
            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
            string meetingId = "";
            string currentUser = "B014172"; // Later replace with Session["Username"] or User.Identity.Name

            try
            {
                using (SqlConnection conn = new SqlConnection(connStr))
                using (SqlCommand cmd = new SqlCommand("MA_InsertMeeting", conn))
                {
                    cmd.CommandType = CommandType.StoredProcedure;

                    cmd.Parameters.AddWithValue("@Title", txtTitle.Text);
                    cmd.Parameters.Add("@StartDateTime", SqlDbType.DateTime).Value = DateTime.Parse(txtStartDateTime.Text);
                    cmd.Parameters.Add("@EndDateTime", SqlDbType.DateTime).Value = DateTime.Parse(txtEndDateTime.Text);
                    cmd.Parameters.AddWithValue("@Venue", txtVenue.Text);
                    cmd.Parameters.AddWithValue("@Organizer", txtOrganizer.Text);
                    cmd.Parameters.AddWithValue("@CreatedBy", currentUser);

                    SqlParameter outputParam = new SqlParameter("@MeetingId", SqlDbType.NVarChar, 50)
                    {
                        Direction = ParameterDirection.Output
                    };
                    cmd.Parameters.Add(outputParam);

                    conn.Open();
                    cmd.ExecuteNonQuery();
                    conn.Close();

                    meetingId = outputParam.Value.ToString();

                    // Show success panel
                    pnlSuccess.Visible = true;

                    // Refresh grid so new meeting shows up
                    LoadMeetings();

                    // Close modal + show success alert
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "saveSuccess",
                        "closeModal(); showSuccessAlert();", true);
                }
            }
            catch (SqlException sqlEx)
            {
                // SQL Server error
                lblMessage.Text = "Database error: " + sqlEx.Message;
                lblMessage.CssClass = "text-danger fw-bold";
            }
            catch (FormatException)
            {
                // Handle invalid date format
                lblMessage.Text = "Invalid date format. Please check Start/End Date fields.";
                lblMessage.CssClass = "text-danger fw-bold";
            }
            catch (Exception ex)
            {
                // General error
                lblMessage.Text = "Unexpected error: " + ex.Message;
                lblMessage.CssClass = "text-danger fw-bold";
            }
        }







        protected void gvMeetings_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                Label lblStatus = (Label)e.Row.FindControl("lblStatus");
                if (lblStatus != null)
                {
                    //string status = lblStatus.Text.ToLower();
                    string status = lblStatus.Text.Trim().ToLower();

                    switch (status)
                    {
                        case "scheduled":
                            lblStatus.CssClass = "badge bg-info";
                            break;
                        case "ongoing":
                            lblStatus.CssClass = "badge bg-success";
                            break;
                        //case "missed":
                        //    lblStatus.CssClass = "badge bg-danger";
                        //    break;
                        default:
                            lblStatus.CssClass = "badge bg-secondary";
                            break;
                           
                    }
                }
            }
        }


        //protected void cvDateRange_ServerValidate(object source, ServerValidateEventArgs args)
        //{
        //    DateTime start, end;
        //    if (DateTime.TryParse(txtStartDateTime.Text, out start) &&
        //        DateTime.TryParse(txtEndDateTime.Text, out end))
        //    {
        //        args.IsValid = end > start;
        //    }
        //    else
        //    {
        //        args.IsValid = true; // RequiredFieldValidator handles empty values
        //    }
        //}


        [System.Web.Services.WebMethod]
        public static object GetMeetingById(string meetingId)
        {
            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("GetMeetingById", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingId", meetingId);
                conn.Open();

                using (SqlDataReader dr = cmd.ExecuteReader())
                {
                    if (dr.Read())
                    {
                        return new
                        {
                            MeetingId = dr["MeetingId"].ToString(),
                            Title = dr["Title"].ToString(),
                            StartDateTime = Convert.ToDateTime(dr["StartDateTime"]).ToString("yyyy-MM-ddTHH:mm"),
                            EndDateTime = Convert.ToDateTime(dr["EndDateTime"]).ToString("yyyy-MM-ddTHH:mm"),
                            Venue = dr["Venue"].ToString(),
                            Organizer = dr["Organizer"].ToString()
                        };
                    }
                }
            }
            return null;
        }

        protected void btnUpdate_Click(object sender, EventArgs e)
        {
            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("MA_UpdateMeeting", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingId", hfEditMeetingId.Value);
                cmd.Parameters.AddWithValue("@Title", txtEditTitle.Text);
                cmd.Parameters.AddWithValue("@StartDateTime", DateTime.Parse(txtEditStartDate.Text));
                cmd.Parameters.AddWithValue("@EndDateTime", DateTime.Parse(txtEditEndDate.Text));
                cmd.Parameters.AddWithValue("@Venue", txtEditVenue.Text);
                cmd.Parameters.AddWithValue("@Organizer", txtEditOrganizer.Text);

                conn.Open();
                cmd.ExecuteNonQuery();
            }

            // Refresh list after update
            LoadMeetings();

            // Close modal + show alert
            ScriptManager.RegisterStartupScript(this, this.GetType(), "updateSuccess",
                "closeEditModal(); showSuccessAlert('Meeting updated successfully!');", true);
        }


        protected void btnConfirmDelete_Click(object sender, EventArgs e)
        {
            int meetingId = int.Parse(hfDeleteMeetingId.Value);

            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("MA_UpdateMeetingStatus", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingID", meetingId);
                cmd.Parameters.AddWithValue("@Status", "Deleted");

                conn.Open();
                cmd.ExecuteNonQuery();
            }

            // Refresh grid
            //BindMeetings();
            LoadMeetings();

            // Show success alert
            //ShowSuccessMessage("Meeting deleted successfully!");
        }


        protected void btnConfirmStart_Click(object sender, EventArgs e)
        {
            int meetingId = int.Parse(hfStartMeetingId.Value);

            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("MA_UpdateMeetingStatus", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingId", meetingId);
                cmd.Parameters.AddWithValue("@Status1", "Ongoing");

                conn.Open();
                cmd.ExecuteNonQuery();
            }

            // Redirect to meeting attendance page with MeetingID
            Response.Redirect($"meetingattendance.aspx?MeetingID={meetingId}");
        }

    }
}
